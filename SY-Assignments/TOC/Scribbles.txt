Lex generates a C-language scanner from a source specification.
Specification as in rules for characters/expressions.


_____________________________________________________________________________
C source code is generated by:
$ lex lex.l
$ lex lex1.l lex2.l lex3.l
(lex.l conventionally favorite for file containing your lex specs)


_____________________________________________________________________________
Output File (default): lex.yy.c
This file contains definition of yylex() function.
yylex()function 
 - returns 1 --> exp found
 - returns 0 --> end of file

Each call to yylex() parses one token, and it picks up from where it left off.


_____________________________________________________________________________
Redirecting Output File:
$ lex -t lex.l > lex.c
All the options/flags are written between "lex" and "lex.l"

The .c file when compiled gives us object program/scanner.

lex library provides a default main() which in turn calls yylex()
$ cc lex.yy.c -ll


_____________________________________________________________________________
LEX SOURCE

%{
definitions;	// Optional
%}

%%
rules;	        // Mandatory
%%

user routines;	// Optional

_____________________________________________________________________________
Special Features
yytext[]  --> Matched input text
yyleng    --> Number of CHAR
yymore()
yyless(n)
REJECT
ECHO


_____________________________________________________________________________

yywrap() Function
Usually called at the end of file
Default return value (1)
if it returns 1 then it continues normal wrap-up

